<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>wking&#39;s Blog</title>
  
  <subtitle>把有限的时间、精力放在有意义的事情上。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ctrain.github.io/"/>
  <updated>2017-10-09T15:30:48.000Z</updated>
  <id>https://ctrain.github.io/</id>
  
  <author>
    <name>wking</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>刘媛媛-课时3-学习一切之前先学历史</title>
    <link href="https://ctrain.github.io/2017/10/09/%E8%AF%BE%E6%97%B603-%E5%AD%A6%E4%B9%A0%E4%B8%80%E5%88%87%E4%B9%8B%E5%89%8D%E5%85%88%E5%AD%A6%E5%8E%86%E5%8F%B2/"/>
    <id>https://ctrain.github.io/2017/10/09/课时03-学习一切之前先学历史/</id>
    <published>2017-10-09T15:19:20.000Z</published>
    <updated>2017-10-09T15:30:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为什么要先学历史"><a href="#为什么要先学历史" class="headerlink" title="为什么要先学历史"></a>为什么要先学历史</h2><p>（1）理解<br>（2）判断<br>（3）创新<br><a id="more"></a></p><h2 id="一般性的学习方法和思路"><a href="#一般性的学习方法和思路" class="headerlink" title="一般性的学习方法和思路"></a>一般性的学习方法和思路</h2><p>（1）费曼学习法<br>第一步．选择一个你想要理解的概念<br>第二步．设想一种场景，你正要向别人传授这个概念<br>第三步．如果你感觉卡壳了，就回顾一下学习资料<br>第四步．为了让你的讲解通俗易懂，简化语言表达</p><p>（2）艾宾浩斯字习法：一种基于大脑遗忘曲线的学习方法<br>从刚刚记忆完毕到20分钟之后，遗忘率高达40％+<br>结论：尽量在同样的时间内去重复更多的遍数</p><p>（3）整体性学习<br>第一步-获取<br>第三步-拓展<br>第四步-纠错<br>第五步-应用<br>第六步-测试</p><h2 id="正向学习与逆向学习"><a href="#正向学习与逆向学习" class="headerlink" title="正向学习与逆向学习"></a>正向学习与逆向学习</h2><p>正向思维：由条件推解结论的过程<br>逆向思维：由结论反推所要应用的条件。再推回去找到结论的过程。</p><p>由此提出一个概念<br>正向学习：面向现实问题，通过学习多种方法，进而解决问题的过程。<br>逆向学习：面向同题演进过程，寻找方法的源头和条件，发现问題最优解的过程。</p><h2 id="历史的学习路径"><a href="#历史的学习路径" class="headerlink" title="历史的学习路径"></a>历史的学习路径</h2><p>（1）由上而下，自古到今<br>（2）自下溯上，自今到古<br>（3）纯看自己的兴趣<br>结论：历史学者研究通史建议使用第一种，避兔陷入狭隘；<br>其他学科学习建议使用第二种。</p><h2 id="历史字习的三种境界"><a href="#历史字习的三种境界" class="headerlink" title="历史字习的三种境界"></a>历史字习的三种境界</h2><p>（1）史才<br>（2）史识<br>（3）史德</p><h2 id="逆向学习的三个目标"><a href="#逆向学习的三个目标" class="headerlink" title="逆向学习的三个目标"></a>逆向学习的三个目标</h2><p>（1）起：起源由来（本质）<br>（2）纵：发展脉络（变化）<br>（3）横：历史背景（原因）</p><h2 id="持续学习与“历史”学习"><a href="#持续学习与“历史”学习" class="headerlink" title="持续学习与“历史”学习"></a>持续学习与“历史”学习</h2><p>先学历史的人属于持续学习者<br>以成为某一领域的专冢为目标，需保持持续学习的精神</p><h2 id="博古通今不等于无法切中要害"><a href="#博古通今不等于无法切中要害" class="headerlink" title="博古通今不等于无法切中要害"></a>博古通今不等于无法切中要害</h2><p>学习一切知识之前先学“历史”的目的是解决问题</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;为什么要先学历史&quot;&gt;&lt;a href=&quot;#为什么要先学历史&quot; class=&quot;headerlink&quot; title=&quot;为什么要先学历史&quot;&gt;&lt;/a&gt;为什么要先学历史&lt;/h2&gt;&lt;p&gt;（1）理解&lt;br&gt;（2）判断&lt;br&gt;（3）创新&lt;br&gt;
    
    </summary>
    
    
      <category term="核心技能" scheme="https://ctrain.github.io/tags/%E6%A0%B8%E5%BF%83%E6%8A%80%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>刘媛媛-课时2-到底是什么决定了你的学习效果？</title>
    <link href="https://ctrain.github.io/2017/10/09/%E8%AF%BE%E6%97%B602-%E5%88%B0%E5%BA%95%E6%98%AF%E4%BB%80%E4%B9%88%E5%86%B3%E5%AE%9A%E4%BA%86%E4%BD%A0%E7%9A%84%E5%AD%A6%E4%B9%A0%E6%95%88%E6%9E%9C/"/>
    <id>https://ctrain.github.io/2017/10/09/课时02-到底是什么决定了你的学习效果/</id>
    <published>2017-10-09T14:53:23.000Z</published>
    <updated>2017-10-09T15:31:44.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习效率。怎么样提高自己的学习效率？"><a href="#学习效率。怎么样提高自己的学习效率？" class="headerlink" title="学习效率。怎么样提高自己的学习效率？"></a>学习效率。怎么样提高自己的学习效率？</h2><h3 id="有目的的学习"><a href="#有目的的学习" class="headerlink" title="有目的的学习"></a>有目的的学习</h3><ol><li>支撑学习自主性的2种动力来源：<br>a. 兴趣<br>b. 急用<a id="more"></a></li><li>从急用性比发去学习的做法<br>a. 做一个问題清单<br>b. 为这些问题做紧急性排名<br>c. 去上去寻找问题相关的书单<br>d. 找出书单中最感兴趣、最着急阅读的章节<br>e. 为问題记录答案<br>f. 其他章节阅读</li></ol><h3 id="利用别人的经历和脑袋去学习"><a href="#利用别人的经历和脑袋去学习" class="headerlink" title="利用别人的经历和脑袋去学习"></a>利用别人的经历和脑袋去学习</h3><ol><li>利用别人的经历作为学习材料</li><li>创利用别人的思维作为发散方向<h3 id="积累更多的背景知识"><a href="#积累更多的背景知识" class="headerlink" title="积累更多的背景知识"></a>积累更多的背景知识</h3></li><li>背景知识越多的时候，思考、理解和学习的速度会越快。</li><li>创学的越多，积累越多的事实和知识，学习的效率就越好，速度就越快。</li></ol><h2 id="怎么放大自己的努力效果，付出同样的努力，如何事半功倍？"><a href="#怎么放大自己的努力效果，付出同样的努力，如何事半功倍？" class="headerlink" title="怎么放大自己的努力效果，付出同样的努力，如何事半功倍？"></a>怎么放大自己的努力效果，付出同样的努力，如何事半功倍？</h2><h3 id="找到趋势和車点的思考方法：从横面和纵向上来思考"><a href="#找到趋势和車点的思考方法：从横面和纵向上来思考" class="headerlink" title="找到趋势和車点的思考方法：从横面和纵向上来思考"></a>找到趋势和車点的思考方法：从横面和纵向上来思考</h3><ol><li>所处的行业/公司/职位<br>创能够选择的其他行业/公司/职位<br>行业发展的趋势和重点是什么？<br>公司的趋势和重点是什么？<br>郜门的起势和重点是什么？<br>我的工作的趋势和重点是什么？<br>学生版考试的趋势和我复习的重点是什么？<h3 id="加持杠杆：怎么放大你的努力？"><a href="#加持杠杆：怎么放大你的努力？" class="headerlink" title="加持杠杆：怎么放大你的努力？"></a>加持杠杆：怎么放大你的努力？</h3>杠杆1：技术<br>杠杆2：资本</li><li>总结：为你的努力加持一个外界的杠杆，用杠杆思维持续的观察和分析。</li><li>常常问自己的一个问题：除了我自己的努力之外，我还可能撬动的其他资源是什么？<br>举例：媛媛人生当中使用的杠杆：<br>我+北大的价值==撬动更多的工作机会<br>我+电视的价值==撬动更多的潜在机会<br>我+直播平台的渠道==动更多的用户<br>我+资本==撬动了价值更高的事业<h3 id="保持热情：影响到你的潜能发挥一一你未来的努力效果"><a href="#保持热情：影响到你的潜能发挥一一你未来的努力效果" class="headerlink" title="保持热情：影响到你的潜能发挥一一你未来的努力效果"></a>保持热情：影响到你的潜能发挥一一你未来的努力效果</h3></li><li>为什么你没有喜欢的行业？<br>a. 没有深度学习，不了解<br>b. 没有获得成就感</li><li>20小时的学习理论</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;学习效率。怎么样提高自己的学习效率？&quot;&gt;&lt;a href=&quot;#学习效率。怎么样提高自己的学习效率？&quot; class=&quot;headerlink&quot; title=&quot;学习效率。怎么样提高自己的学习效率？&quot;&gt;&lt;/a&gt;学习效率。怎么样提高自己的学习效率？&lt;/h2&gt;&lt;h3 id=&quot;有目的的学习&quot;&gt;&lt;a href=&quot;#有目的的学习&quot; class=&quot;headerlink&quot; title=&quot;有目的的学习&quot;&gt;&lt;/a&gt;有目的的学习&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;支撑学习自主性的2种动力来源：&lt;br&gt;a. 兴趣&lt;br&gt;b. 急用
    
    </summary>
    
    
      <category term="核心技能" scheme="https://ctrain.github.io/tags/%E6%A0%B8%E5%BF%83%E6%8A%80%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>刘媛媛-课时1-一切学习的底层方法论</title>
    <link href="https://ctrain.github.io/2017/10/09/%E8%AF%BE%E6%97%B601-%E4%B8%80%E5%88%87%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%BA%95%E5%B1%82%E6%96%B9%E6%B3%95%E8%AE%BA/"/>
    <id>https://ctrain.github.io/2017/10/09/课时01-一切学习的底层方法论/</id>
    <published>2017-10-09T14:14:21.000Z</published>
    <updated>2017-10-09T15:30:09.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="100天考北大的秘密？"><a href="#100天考北大的秘密？" class="headerlink" title="100天考北大的秘密？"></a>100天考北大的秘密？</h2><p>第一件事：研究往年的真题以及北豪大学的录取数线<br><a id="more"></a></p><p>第二件事：研究教材，怎么学才前以让我把所有数都拿到？</p><p>第三件事：测验</p><p>第四件事：找到问题</p><p>第五件事：重新想办法</p><p>第六件事：记录下这个学习方法</p><h2 id="实现逆袭的做事方式？六个步骤"><a href="#实现逆袭的做事方式？六个步骤" class="headerlink" title="实现逆袭的做事方式？六个步骤"></a>实现逆袭的做事方式？六个步骤</h2><p>1、准确定位：提高准确率，<strong>让你的努力拥有加速度</strong></p><ul><li>目标定位</li><li>问题定位</li></ul><p>2、找到途径：协同检查；做一个“常出错点”列表；请教别人，补充经验</p><ul><li>列举途径</li><li>记录</li></ul><p>3、彻底执行</p><ul><li>及时开始</li><li>全身贯注</li><li>长期坚持</li></ul><p>4、及时反馈<br>5、反复调整<br>6、完成记录</p><h2 id="学什么可以改变命运？"><a href="#学什么可以改变命运？" class="headerlink" title="学什么可以改变命运？"></a>学什么可以改变命运？</h2><p>1．思考三个问题：</p><p>学习是否可以改变命运？</p><p>为什么你的学习没有给你带来改变？</p><p>学什么可以给你带来改变？</p><p>2．对于解决问题最有用的三个部分的学习：<br>1）思维方式一保证方向【课程的第一部分】<br>能够反复使用的、提高效率的思路就是思维方式</p><p>2）专业知识．保证质量【课程的第四五六部分】<br>一定范围内的系统的深度的知识</p><p>3）执行技术．保证实现【课程的第二三部分】<br>怎么记忆，怎么专注，怎么管理时间等</p><p>一个人有比较好的思维方式，较高的专业知识，和比较好的执行技术，基本上就是一个比较牛的人了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;100天考北大的秘密？&quot;&gt;&lt;a href=&quot;#100天考北大的秘密？&quot; class=&quot;headerlink&quot; title=&quot;100天考北大的秘密？&quot;&gt;&lt;/a&gt;100天考北大的秘密？&lt;/h2&gt;&lt;p&gt;第一件事：研究往年的真题以及北豪大学的录取数线&lt;br&gt;
    
    </summary>
    
    
      <category term="核心技能" scheme="https://ctrain.github.io/tags/%E6%A0%B8%E5%BF%83%E6%8A%80%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>刘媛媛-课时4-建立自己的知识框架</title>
    <link href="https://ctrain.github.io/2017/10/09/%E8%AF%BE%E6%97%B604-%E5%BB%BA%E7%AB%8B%E8%87%AA%E5%B7%B1%E7%9A%84%E7%9F%A5%E8%AF%86%E6%A1%86%E6%9E%B6/"/>
    <id>https://ctrain.github.io/2017/10/09/课时04-建立自己的知识框架/</id>
    <published>2017-10-09T14:14:21.000Z</published>
    <updated>2017-10-09T15:31:11.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为什么要建立知识框架？（一定要有框架意识）"><a href="#为什么要建立知识框架？（一定要有框架意识）" class="headerlink" title="为什么要建立知识框架？（一定要有框架意识）"></a>为什么要建立知识框架？（一定要有框架意识）</h2><p>（1）便于查找</p><p>（2）便于分享</p><p>（3）便于记忆<br><a id="more"></a></p><h2 id="一般性学习的误区"><a href="#一般性学习的误区" class="headerlink" title="一般性学习的误区"></a>一般性学习的误区</h2><p>（1）只收藏，不阅读</p><p>（2）只阅读，不归类</p><p>（3）只归类，不提炼</p><h2 id="框架思维下的学习步骤"><a href="#框架思维下的学习步骤" class="headerlink" title="框架思维下的学习步骤"></a>框架思维下的学习步骤</h2><p>第一步-收集</p><p>第二步-整理</p><p>第三步-消化</p><p>第四步-输出</p><p>一般性学习只有第一步，没有后面三个步骤</p><p>第一步-收集</p><ul><li>收集工具：发送至印象笔记；备忘录</li><li>收集途径：从喜爱的作者或者感兴趣的话题出发，形成一个舒适的学习路径</li></ul><p>印象笔记可以完全辅助我们进行知识分类。一些零碎的想法要通过备忘录记下来，然后进行整理。</p><p>第二步-整理</p><ul><li>整理目标：形成秩序；形成关联</li><li>整理工具：标签和思维导图</li></ul><p>第三步-消化</p><p>整理的过程会帮助消化，输出也会帮助我们消化。</p><p>参考费曼技巧：<br><a href="https://www.zhihu.com/question/20576786" target="_blank" rel="external">https://www.zhihu.com/question/20576786</a></p><p>第四步-输出</p><p>输出方式-写作（或者与人讲解）</p><ul><li>倒逼自己去完善知识框架</li><li>检验自己对于知识框架的掌握和理解</li></ul><h2 id="形成框架思维"><a href="#形成框架思维" class="headerlink" title="形成框架思维"></a>形成框架思维</h2><p>成为更有秩序和更聪明的人</p><ul><li>做事之前，先从框架上考虑做事的步骤和方面</li><li>做事之后，再从框架上去提炼思维和理论</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;为什么要建立知识框架？（一定要有框架意识）&quot;&gt;&lt;a href=&quot;#为什么要建立知识框架？（一定要有框架意识）&quot; class=&quot;headerlink&quot; title=&quot;为什么要建立知识框架？（一定要有框架意识）&quot;&gt;&lt;/a&gt;为什么要建立知识框架？（一定要有框架意识）&lt;/h2&gt;&lt;p&gt;（1）便于查找&lt;/p&gt;
&lt;p&gt;（2）便于分享&lt;/p&gt;
&lt;p&gt;（3）便于记忆&lt;br&gt;
    
    </summary>
    
    
      <category term="核心技能" scheme="https://ctrain.github.io/tags/%E6%A0%B8%E5%BF%83%E6%8A%80%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>当我加入项目时，我要了解什么</title>
    <link href="https://ctrain.github.io/2017/10/08/%E5%BD%93%E6%88%91%E5%8A%A0%E5%85%A5%E9%A1%B9%E7%9B%AE%E6%97%B6%EF%BC%8C%E6%88%91%E8%A6%81%E4%BA%86%E8%A7%A3%E4%BB%80%E4%B9%88/"/>
    <id>https://ctrain.github.io/2017/10/08/当我加入项目时，我要了解什么/</id>
    <published>2017-10-08T03:08:45.000Z</published>
    <updated>2017-10-08T03:08:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近在客户现场做咨询，有人跑过来，问了我同样的话题。经过简单沟通，我发现他真正的问题是，为什么我们作为一个外来人可以很快地上手他们的项目，而他们自己的新员工却很长时间才能上手。</p><p>这是一个很有趣的问题。<br><a id="more"></a></p><p>正如我在前面那篇文章里写到的，通常我加入一个项目，我首先要获得这个项目的大图景。作为一个ThoughtWorker，我一定会了解这个项目业务价值，它要解决的问题是什么。即便是技术，我也会尝试先从架构入手。等有了大图景，具体到一个问题时，我就知道它在整个项目中，是拼图的哪一块。</p><p>对比而言，客户的很多新人加入一个项目时，常常是试图从一个具体的问题着手，在解决问题的过程中，有太多小障碍了，每次遇到的几乎都是一个全新的问题。所以，几乎就是一路磕磕绊绊。当然，这里不排除我比客户的大多数新人工作经验丰富，所以，对于大部分技术理解能力要比他们好。</p><p>我看到的另外一点大的差别是，我了解项目时，我会按照自己的思路，通过问题，一步步将项目分解开来，也就是从业务到技术，从大框架到小模块。通常，只要与我交流的人对项目足够了解，基本上，我都可以把项目大致梳理出来。</p><p>相较而言，一些新人的接收模式是，等着别人按照他们的思路来介绍。以我和许多客户的合作经历来看，大多数经年累月的项目往往是不足够清晰，甚至是相当混乱的，在这个项目上长时间工作的人也很难把它梳理得很清楚，所以，指望他们把项目介绍清楚只能祈求好运了。前面那篇文章我提到过，许多人是把业务和技术混在一起的，这是我经历过的实际情况。</p><p>除了按照上面所说的方式理解项目，之所以会给人一个很快上手项目的感觉，可能还有一点：使用”行话”，也就是客户他们常用的术语。与人用”行话”交流，往往会更容易建立彼此的信任，也会让人认为你对交流的东西很懂行，这或许算是附赠的技巧吧！</p><p>在ThoughtWorks里面，我经常有机会在不同的项目组间轮换，所以，经常会面对陌生的一切，出去做咨询项目时也是如此。但人们常常会对有经验的人加入项目有所预期，也就需要我能够尽快进入到工作状态中。所以，我也就慢慢摸索出一套适合自己的了解项目的方式。</p><p><strong>业务</strong></p><p>首先，肯定要从业务入手，了解这个系统是做什么的。既然是初始的接触，我并不预期弄清楚所有的细节，只要知道这个系统是做什么的基本上就够了。</p><p>按理说，这通常不应该是什么问题，但这也是常常容易出问题的地方，比如说，有为数不少的人在讲业务的时候，会把技术的内容混在一起讲，这一点对于技术人员尤为明显。个人就曾经经历过让我开始怀疑自己智商的几次介绍。如果5分钟说不清楚，你就别指望半个小时能说清楚。</p><p><strong>技术</strong></p><p>了解了系统的业务，接着就是对技术方面的了解。还是先从宏观方面入手，我期望了解到这个系统是由哪个技术栈实现的，Java、C/C++还是.NET系等等。这样，我就可以系统采用相应的工具与框架有个大概的预期。</p><p>接下来，我期望从架构层面上了解系统。有没有一张或几张图能够把整个系统描绘出来，比如，这个系统需要与几个外部系统集成，自身包括哪些部分等等。一般我不指望有现成的图，多半的情况是，其他人一边说，一边在白板上画出一副这样的图。我接下来会根据自己的理解，把需要的这种图画出来。</p><p>对大面的东西有了了解，我就希望稍微了解一下细节。从集成开始，因为输入输出对一个系统来说是非常重要的，而集成点往往都是系统信息来源。如果有集成，集成方式是什么，比如，Web Service、RMI、MQ，有为数不少的系统用的是FTP，这些集成方式相当于信息的承载，那之上的信息是什么样子，我们还需要搞清楚，比如有的系统用的是MQ，在MQ上传的是XML等等。接下来，就是更具体的协议层面的东西了，我想知道是否有对应的文档，这样，我在需要的时候，就可以查看每个字段具体的含义，不过，这往往不是初期要了解的东西。</p><p>了解了集成，接下来就是系统内部了。这个系统有哪些子系统或模块组成。好的系统往往是由多个进程构成的，这样才不会彼此影响。对于这样的系统，我只要了解每个子系统的作用就可以了。而对于那些只有一个进程的系统，我就需要了解一下这个系统包含哪些模块，各个模块承担着怎样的职责。通常，这会一个很重要的出问题的点，因为很多系统虽然号称有模块的概念，但模块之间的职责往往是不清楚的，经常会出现很严重的依赖问题。对于现代软件系统而言，分层结构往往是不可或缺的，我还希望了解一下这个系统有多少个层，每个层做的事情是什么。这里提及了模块和层次，模块通常是从业务上来分，而层次往往是从技术上看，一个水平一个垂直。</p><p>从设计层面了解完，就是动手的层面了，不过，还不是写代码的事。我会先了解构建脚本。了解一下项目中常用的命令，比如，是否可以一键式跑脚本提交之类的。我期望看到的是一个从版本管理工具里拿出来直接可以构建成功的脚本。但通常情况都不是这样的，要改很多东西、配不少的东西。这也许就是未来要改进的东西。</p><p>熟悉了周边的东西，我们就可以深入到源码层面了。这就是我们程序员最熟悉的东西，比如，源码目录结构、配置文件的位置、模块在源码上的体现之类的等等。但作为最初的接触，我们只要了解基本的东西就够了，因为这是我们后来投入精力最多的地方，以后深入理解的机会多得是。</p><p><strong>团队运作</strong></p><p>除了了解技术层面的东西，我还希望了解团队运作方面的东西，一个方面就是常见活动的时间安排，比如，站会、迭代计划会议、回顾会议等的时间。再有一个方面就是，团队内部是否一些活动安排，比如是否有每天的Code Diff，是否有常规的Session墙。如果团队有外部客户，我们有客户日常的沟通是怎样进行的。</p><p>通过这些问题，我们便不难发现项目运作上的一些问题，比如，很多团队与客户之间根本没有常规的沟通，只是会临时起意去做沟通。有的团队没有Session墙，团队内部分享也就没有常规化。</p><p>通常以上这些东西都不需要很长的时间来了解，快的话，一天就可够了。而通过这些了解，我就可以对团队的基本情况有了一个相对完整的大体认识，接下来的事，就是卷起袖子开始干活了！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在客户现场做咨询，有人跑过来，问了我同样的话题。经过简单沟通，我发现他真正的问题是，为什么我们作为一个外来人可以很快地上手他们的项目，而他们自己的新员工却很长时间才能上手。&lt;/p&gt;
&lt;p&gt;这是一个很有趣的问题。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
